<?php

/**
 * @file
 * A Shibboleth and UW Groups authentication module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function uwauth_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.uwauth':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('UW Auth implements user authentication and automatic role assigment. Authentication is provided by Shibboleth, with role assignment utilizing UW Groups or Active Directory.') . '</p>';
      $output .= '<h3>' . t('General Settings') . '</h3>';
      $output .= '<p>' . t('From here you can specify what your group membership source is. By default, this will be set to None, which effectively disables the module. To minimize issues, select your group membership source after you have created your roles, mapped them, and configured the group source.') . '</p>';
      $output .= '<p>' . t('At any time if you wish to disable the module, you can do so by setting the source to None. This change will disable it, without erasing the module configuration.') . '</p>';
      $output .= '<h3>' . t('Groups Web Service') . '</h3>';
      $output .= '<p>' . t('GWS offers a centralized system for managing user groups at UW. In order to utilize it, you will need a certificate issued by UW CA to authenticate your application with the web service. This certificate is different from the InCommon certificate issued for web servers.') . '</p>';
      $output .= '<h3>' . t('Active Directory') . '</h3>';
      $output .= '<p>' . t('With AD, you can utilize either NETID or a departmental AD infrastructure. Both authenticated, and anonymous binds are supported. It is recommended that you use LDAPS whenever possible, and it is required when using NETID. You may need to configure OpenLDAP to load the required CA certificates, if using LDAPS.') . '</p>';
      $output .= '<h3>' . t('Group to Role Mapping') . '</h3>';
      $output .= '<p>' . t('For portability purposes, externally managed groups are mapped to Drupal roles. This mapping function allows for changes in group names, and sources without having to change permissions within Drupal.') . '</p>';
      $output .= '<p>' . t('Each row within the text box represents a group to role map entry. A group can only be mapped to a single role, as the group name is used as an internal identifier. Groups cannot be mapped to builtin Drupal roles. So, if you want to give a group, admin privileges, you will need to create a role with those privileges.') . '</p>';
      $output .= '<h3>' . t('History') . '</h3>';
      $output .= '<p>' . t('Developed by John Yocum for UW DEOHS. Source code history, releases, etc. available from') . ' ' . '<a href=https://github.com/jtyocum/drupal8-uwauth>https://github.com/jtyocum/drupal8-uwauth</a>.' . '</p>';
      return $output;
  }
}
